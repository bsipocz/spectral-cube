language: python

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

python:
    - 2.7
    - 3.4
    - 3.5

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=1.10
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='yt matplotlib'
        - PIP_DEPENDENCIES='aplpy pvextractor https://github.com/radio-astro-tools/radio_beam'
    matrix:
        - SETUP_CMD='egg_info'

matrix:
    include:

        # Do a coverage test in Python 2.
        - python: 2.7
          env: SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - python: 2.7
          env: SETUP_CMD='build_sphinx -w'

        # Try Astropy development version
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
               CONDA_DEPENDENCIES='yt'
               PIP_DEPENDENCIES=''
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'

        - python: 3.4
          env: ASTROPY_VERSION=development SETUP_CMD='test'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''
        - python: 3.5
          env: ASTROPY_VERSION=development SETUP_CMD='test'
        - python: 3.5
          env: ASTROPY_VERSION=development SETUP_CMD='test'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''

        # Try all python versions with the latest numpy
        - python: 2.7
          env: SETUP_CMD='test' YT=yes
        - python: 2.7
          env: SETUP_CMD='test' YT=no
        - python: 2.7
          env: SETUP_CMD='test' APLPY=yes PVEXTRACTOR=yes
        - python: 3.4
          env: SETUP_CMD='test'
        - python: 3.5
          env: SETUP_CMD='test'
        - python: 3.5
          env: SETUP_CMD='test' APLPY=yes PVEXTRACTOR=yes

        # Try older numpy versions
        - python: 2.7
          env: NUMPY_VERSION=1.9 SETUP_CMD='test'
        - python: 2.7
          env: NUMPY_VERSION=1.8 SETUP_CMD='test'

        # Test with bottleneck
        # with all optional dependencies
        - python: 2.7
          env: ASTROPY_VERSION=stable SETUP_CMD='test' NUMPY_VERSION=1.9
               CONDA_DEPENDENCIES+=' bottleneck'
        - python: 3.5
          env: ASTROPY_VERSION=stable SETUP_CMD='test' NUMPY_VERSION=1.10
               CONDA_DEPENDENCIES+=' bottleneck'
        # with no optional dependencies
        - python: 3.5
          env: ASTROPY_VERSION=stable SETUP_CMD='test' NUMPY_VERSION=1.10
               CONDA_DEPENDENCIES='bottleneck'
               PIP_DEPENDENCIES=''

before_install:
    # Make sure that interactive matplotlib backends work
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    # Make sure matplotlib uses PyQT not PySide
    - export QT_API=pyqt

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

script:
    - if [[ $SETUP_CMD != 'egg_info' ]]; then
          cd spectral_cube/tests/data ; make ; cd ../../../;
      fi
    - python setup.py $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then
          coveralls --rcfile='spectral_cube/tests/coveragerc';
      fi
